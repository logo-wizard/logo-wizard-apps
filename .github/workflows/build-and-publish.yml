name: Build & Publish Apps

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-ui:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Log into docker registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ secrets.YC_CI_REGISTRY }}/${{ secrets.YC_CI_REGISTRY_ID }}
          username: ${{ secrets.YC_CI_REGISTRY_USER }}
          password: ${{ secrets.YC_CI_REGISTRY_PASSWORD }}

      - name: Extract Image Tag
        id: set-img-tag
        run: |
          cd ./frontend
          VERSION_TAG=`grep -E "^\s+\"version\": \"[0-9]+?\.[0-9]+?\.[0-9]+?\",$" package.json | grep -Eo "[0-9]+?\.[0-9]+?\.[0-9]+?"`
          IMG_TAG=${{ secrets.YC_CI_REGISTRY }}/${{ secrets.YC_CI_REGISTRY_ID }}/logo-ui:${VERSION_TAG}
          echo "::set-output name=img-tag::${IMG_TAG}"

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./frontend
          build-args: |
            REACT_APP_APP_ENV=production
            REACT_APP_API_URL=https://back.apps.konstant-anxiety.ru
            REACT_APP_KC_URL=https://auth.apps.konstant-anxiety.ru
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.set-img-tag.outputs.img-tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

  build-base-base:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Log into docker registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ secrets.YC_CI_REGISTRY }}/${{ secrets.YC_CI_REGISTRY_ID }}
          username: ${{ secrets.YC_CI_REGISTRY_USER }}
          password: ${{ secrets.YC_CI_REGISTRY_PASSWORD }}

      - name: Extract Image Tag
        id: set-img-tag
        run: |
          IMG_TAG=${{ secrets.YC_CI_REGISTRY }}/${{ secrets.YC_CI_REGISTRY_ID }}/logo-base-base-image:latest
          echo "::set-output name=img-tag::${IMG_TAG}"

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./backend
          file: ./backend/Dockerfile.base
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.set-img-tag.outputs.img-tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

  build-base:
    runs-on: ubuntu-latest
    if: ${{ success() || cancelled() }}  # allow skipping base-base image build
    needs: build-base-base
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Log into docker registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ secrets.YC_CI_REGISTRY }}/${{ secrets.YC_CI_REGISTRY_ID }}
          username: ${{ secrets.YC_CI_REGISTRY_USER }}
          password: ${{ secrets.YC_CI_REGISTRY_PASSWORD }}

      - name: Extract Image Tag
        id: set-img-tag
        run: |
          BASE_IMG_VERSION=`cat ./backend/base_img_version`
          IMG_TAG=${{ secrets.YC_CI_REGISTRY }}/${{ secrets.YC_CI_REGISTRY_ID }}/logo-base-image:${BASE_IMG_VERSION}
          echo "::set-output name=img-tag::${IMG_TAG}"

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./backend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.set-img-tag.outputs.img-tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
  
  build-worker:
    runs-on: ubuntu-latest
    if: ${{ success() || cancelled() }}  # allow skipping base image build
    needs: [build-base-base, build-base]
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Log into docker registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ secrets.YC_CI_REGISTRY }}/${{ secrets.YC_CI_REGISTRY_ID }}
          username: ${{ secrets.YC_CI_REGISTRY_USER }}
          password: ${{ secrets.YC_CI_REGISTRY_PASSWORD }}

      - name: Extract Image Tag
        id: set-img-tag
        run: |
          BASE_IMG_VERSION=`cat backend/base_img_version`
          cd ./backend/app/logo_worker
          VERSION_TAG=`grep -E "__version__ = " setup.py | grep -Eo "[0-9]+?\.[0-9]+?\.[0-9]+?"`
          IMG_TAG=${{ secrets.YC_CI_REGISTRY }}/${{ secrets.YC_CI_REGISTRY_ID }}/logo-worker:${VERSION_TAG}
          echo "::set-output name=img-tag::${IMG_TAG}"
          echo "::set-output name=base-img-version::${BASE_IMG_VERSION}"

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./backend/app/logo_worker
          build-args: |
            BASE_IMG_VERSION=${{ steps.set-img-tag.outputs.base-img-version }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.set-img-tag.outputs.img-tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          
  build-api:
    runs-on: ubuntu-latest
    if: ${{ success() || cancelled() }}  # allow skipping base image build
    needs: [build-base-base, build-base]
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Log into docker registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ secrets.YC_CI_REGISTRY }}/${{ secrets.YC_CI_REGISTRY_ID }}
          username: ${{ secrets.YC_CI_REGISTRY_USER }}
          password: ${{ secrets.YC_CI_REGISTRY_PASSWORD }}

      - name: Extract Image Tag
        id: set-img-tag
        run: |
          BASE_IMG_VERSION=`cat backend/base_img_version`
          cd ./backend/app/logo_api
          VERSION_TAG=`grep -E "__version__ = " setup.py | grep -Eo "[0-9]+?\.[0-9]+?\.[0-9]+?"`
          IMG_TAG=${{ secrets.YC_CI_REGISTRY }}/${{ secrets.YC_CI_REGISTRY_ID }}/logo-api:${VERSION_TAG}
          echo "::set-output name=img-tag::${IMG_TAG}"
          echo "::set-output name=base-img-version::${BASE_IMG_VERSION}"

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./backend/app/logo_api
          build-args: |
            BASE_IMG_VERSION=${{ steps.set-img-tag.outputs.base-img-version }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.set-img-tag.outputs.img-tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
